// Generated by CoffeeScript 1.3.3
(function() {

  define(['order!../components/jquery/jquery.min', 'order!../components/pkg/pkg', 'order!../components/kendo-ui/js/kendo.web.min'], function() {
    var now, viewModel;
    now = kendo.toString(new Date(), "G");
    $.pkg.init(window.top);
    $.pkg.listen("/file/selected", function(img) {
      return viewModel.set("fileSystem.selected", img);
    });
    $.pkg.listen("/contextMenu/item/created", function(error, message) {
      viewModel.set("contextMenu.message", message);
      if (error) {
        return viewModel.set("contextMenu.error", true);
      } else {
        return viewModel.set("contextMenu.error", false);
      }
    });
    $.pkg.listen("/mediaGalleries/results", function(items) {
      return viewModel.set("mediaGalleries.items", items);
    });
    $.pkg.listen("/idle/event", function(e) {
      return viewModel.get("idle.events").unshift({
        time: kendo.toString(new Date(), "G"),
        status: e
      });
    });
    $.pkg.listen("/tts/voices", function(voices) {
      return viewModel.set("tts.voices", voices);
    });
    $.pkg.listen("/bluetooth/device", function(device) {
      return viewModel.get("bluetooth.devices").push(device);
    });
    viewModel = kendo.observable({
      fileSystem: {
        selected: "",
        click: function() {
          return $.pkg.send("/select/file");
        }
      },
      contextMenu: {
        error: false,
        message: "Everything looks good!",
        item: "",
        type: null,
        add: function() {
          $(".msg").empty();
          return $.pkg.send("/contextMenu/item/add", [this.get("contextMenu.item"), this.get("contextMenu.type.value")]);
        }
      },
      mediaGalleries: {
        get: function() {
          return $.pkg.send("/mediaGalleries/get");
        },
        items: []
      },
      notifications: {
        title: "",
        message: "",
        create: function() {
          return $.pkg.send("/notifications/create", [this.get("notifications.title"), this.get("notifications.message")]);
        }
      },
      idle: {
        events: [
          {
            time: now,
            status: "active"
          }
        ]
      },
      bluetooth: {
        devices: [],
        disovering: false,
        get: function() {
          var discovering;
          discovering = this.get("bluetooth.discovering");
          if (!discovering) {
            this.set("bluetooth.devices", []);
            this.set("bluetooth.discovering", true);
            return $.pkg.send("/bluetooth/startDiscovery");
          } else {
            $.pkg.send("/bluetooth/stopDiscovery");
            return this.set("bluetooth.discovering", false);
          }
        }
      },
      tts: {
        rate: 1,
        pitch: 1,
        currentVoice: "",
        voices: [],
        selected: null,
        say: function() {
          var message;
          message = this.get("tts.selected");
          if ($.type(message) !== "string") {
            message = message.text;
          }
          return $.pkg.send("/say", [message, this.get("tts.currentVoice"), this.get("tts.rate"), this.get("tts.pitch")]);
        }
      }
    });
    $.pkg.send("/tts/get/voices");
    return kendo.bind(document.body, viewModel);
  });

}).call(this);
